// Visual Studio Code workspace settings.
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Visual Studio Code Settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Do not show the start screen.
    "workbench.startupEditor": "none",
    // Render all whitespace as dots.
    "editor.renderWhitespace": "all",
    // Disable editor autoindentation as the formatter will handle that.
    "editor.autoIndent": "none",
    // Disable the minimap that appears on the right when coding.
    "editor.minimap.enabled": false,
    // Format files on save, except for JSON with comments files.
    // Note that JSON files with comments are intepreted as .jsonc files.
    "editor.formatOnSave": true,
    "[jsonc]": {
        "editor.formatOnSave": false
    },
    // Enable quick suggestions everywhere except for comments, this is useful for documentation intellisense.
    "editor.quickSuggestions": {
        "comments": "off",
        "strings": true,
        "other": "on"
    },
    // Do not reveal files in the explorer as they are open.
    "explorer.autoReveal": false,
    // Disable sticky scroll.
    "editor.stickyScroll.enabled": false,
    // Default theme.
    "workbench.colorTheme": "Visual Studio Dark - C++",
    // Increase line buffer of the integrated terminal.
    "terminal.integrated.scrollback": 10000000,
    // Set specific JSON files to be treated as JSON with comments to avoid warnings on them.
    "files.associations": {
        "**/.vscode/cmake-kits.json": "jsonc",
        "**/.vscode/cmake-variants.json": "jsonc",
        "**/.vscode/launch.json": "jsonc",
        "**/.clang-format": "yaml",
        "**/.clang-tidy": "yaml",
        "**/.clangd": "yaml",
    },
    // Exclude files from appearing in the explorer.
    "files.exclude": {
        "**/.git": true,
        "**/__pycache__": true
    },
    // Disable detection of indentation based on content and use settings below.
    "editor.detectIndentation": false,
    // Configure tab sizes for files, 4 spaces by default.
    "[*]": {"editor.tabSize": 4},
    "[yaml]": {"editor.tabSize": 2},
    "editor.insertSpaces": true,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // C/C++ extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Retrieve configuration options from the CMake extension.
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
    "C_Cpp.default.compileCommands": "${workspaceFolder}/.cmake_build/compile_commands.json",
    // Disable intellisense and code analysis on this extension as it is very slow, use clangd extension instead.
    // This also disables autocompletio and error squiggles, everything handled by clangd extension.
    "C_Cpp.intelliSenseEngine": "disabled",
    "C_Cpp.intelliSenseEngineFallback": "disabled",
    "C_Cpp.codeAnalysis.runAutomatically": false,
    // Disable Doxygen in this extension and handle it via its own extension.
    "C_Cpp.doxygen.generateOnType": false,
    // Disable automatically adding file associations to settings file to avoid unexpected changes.
    "C_Cpp.autoAddFileAssociations": false,
    // Set the preferred include path separator to UNIX style.
    "C_Cpp.preferredPathSeparator": "Forward Slash",
    // Logging level of the extension, useful to debug issues.
    "C_Cpp.loggingLevel": "Information",

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Clangd Language Server extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Enable the Language Server and load .clangd configuration, also incorporate clang-tidy checks and clang-format
    // based on the root folder configuration files '.clang-format' and '.clang-tidy'.
    "clangd.path": "/usr/bin/clangd-15",
    "clangd.arguments": ["--enable-config", "--clang-tidy", "--header-insertion=never"],
    // Ensure updates are disabled so that version is pinned.
    "clangd.checkUpdates": false,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // CMake and CMake syntax extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Configure CMake path and directories.
    "cmake.cmakePath": "/usr/bin/cmake",
    "cmake.buildDirectory": "${workspaceFolder}/.cmake_build",
    "cmake.sourceDirectory": "${workspaceFolder}",
    "cmake.buildBeforeRun": true,
    "cmake.launchBehavior": "reuseTerminal",
    // Do not permit automatic configures, as those might take a long time depending on the project.
    "cmake.configureOnOpen": false,
    "cmake.configureOnEdit": false,
    "cmake.automaticReconfigure": false,
    // Configure status bar of the extension.
    "cmake.options.statusBarVisibility":"visible",
    "cmake.options.advanced": {
        // Disable debug icon, use the 'Run and Debug' tab instead.
        "debug": { "statusBarVisibility": "hidden" },
        // Disable CTest icon, use the 'Testing' tab instead.
        "ctest": { "statusBarVisibility": "hidden" },
        // Disable CPack icon.
        "cpack": { "statusBarVisibility": "hidden" },
        // Disable Workflow icon.
        "workflow": { "statusBarVisibility": "hidden" }
    },
    // Ensure the 'compile_commands.json' file is generated.
    "cmake.exportCompileCommandsFile": true,
    // Configure CTest path and arguments so that it prints output on failure.
    "cmake.ctestPath": "/usr/bin/ctest",
    "cmake.ctestArgs": ["--output-on-failure"],
    // Path to dotnet for CMake syntax.
    "cmake.languageSupport.dotnetPath": "/usr/bin/dotnet",
    // Logging levels, useful for debugging.
    "cmake.enableTraceLogging": false,
    "cmake.loggingLevel": "info",

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Doxygen Documentation Generator extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Do not include return type of a function in the documentation.
    "doxdocgen.generic.includeTypeAtReturn": false,
    // Do not split boolean return values into two entries.
    "doxdocgen.generic.boolReturnsTrueFalse": false,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // DrawIO extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Use the online version, which is the most recent one.
    "hediet.vscode-drawio.offline": false,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Even Better TOML extension settings.
    // NOTE: We mainly use this for syntax highlighting, rather than fully fledged formatting, thus it is not fully
    // configured, just use the defaults.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Ensure bundled Taplo is used.
    "evenBetterToml.taplo.bundled": true,
    // Disable the use of a configuration file for Taplo, we configure it here.
    "evenBetterToml.taplo.configFile.enabled": false,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Esbonio extension settings
    // NOTE: We mainly use this for intellisense, it does not integrate well with Doxygen.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Enable Esbonio, use Python in the virtual environment.
    "esbonio.server.enabled": true,
    "esbonio.server.enabledInPyFiles": false,
    "esbonio.server.pythonPath": "/usr/venvs/development/bin/python",
    "esbonio.server.startupModule": "esbonio",
    // Set the the directories for Sphinx and do not force full builds, trigger them explicitly along with Doxygen.
    "esbonio.sphinx.confDir": "${workspaceFolder}/doc",
    "esbonio.sphinx.buildDir": "${workspaceFolder}/doc/.sphinx_build",
    "esbonio.sphinx.builderName": "html",
    "esbonio.sphinx.forceFullBuild": false,
    // Do not run Doxygen from this extension and ignore warnings, instead run it from command line prior.
    "esbonio.sphinx.tags": ["DOXYGEN_DISABLED"],
    "esbonio.sphinx.warningIsError": false,
    // Disable updates to the underlying language server from this extension.
    "esbonio.server.updateBehavior": "promptAlways",
    "esbonio.server.updateFrequency": "never",
    // Let Sphinx determine the number of jobs to create.
    "esbonio.sphinx.numJobs": 0,
    // Set debug levels.
    "esbonio.sphinx.verbosity": 0,
    "esbonio.server.enableDevTools": false,
    "esbonio.server.logLevel": "debug",

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // PowerShell extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Formatting settings.
    "powershell.codeFormatting.openBraceOnSameLine": false,
    // Start the terminal for intellisense and related on the background.
    "powershell.integratedConsole.startInBackground": true,
    "powershell.integratedConsole.showOnStartup": false,
    // Disable PowerShell sidebar.
    "powershell.sideBar.CommandExplorerVisibility": false,
    // Disable PowerShell updates.
    "powershell.promptToUpdatePowerShell": false,
    // Disable banners when starting PowerShell.
    "powershell.integratedConsole.suppressStartupBanner": true,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Github Actions extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Disable extension, it is only used for validation and intellisense of Github Action files.
    "github-actions.workflows.pinned.workflows": [],
    "github-actions.workflows.pinned.refresh.enabled": false,

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Git-Log Graph extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Trigger from the status bar.
    "git-log--graph.position": "editor",

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // NET Runtime Install tool extension settings
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Disable telemetry on this extension.
    "dotnetAcquisitionExtension.enableTelemetry": false
}